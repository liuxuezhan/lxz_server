--
-- $Id$
--

module( "resmng" )
prop_armLANGKey = {

}

prop_armKey = {
ID = 1, mode = 2, lv = 3, atk = 4, def = 5, hp = 6, speed = 7, weight = 8, consume = 9, pow = 10, trainSpeed = 11, cons = 12, 
}

prop_armData = {

	[ARM_BU_1] = {ARM_BU_1, 1, 1, 24, 10, 520, 11, 9, 0.21, 1, 20, {{1,1,1}}, },
	[ARM_BU_2] = {ARM_BU_2, 1, 2, 33.6, 14, 728, 11, 9, 0.42, 1.4, 24, {{1,1,2}}, },
	[ARM_BU_3] = {ARM_BU_3, 1, 3, 45.6, 19, 988, 11, 10, 0.62, 1.9, 32, {{1,1,3}}, },
	[ARM_BU_4] = {ARM_BU_4, 1, 4, 60, 25, 1300, 11, 10, 0.83, 2.5, 42, {{1,1,4}}, },
	[ARM_BU_5] = {ARM_BU_5, 1, 5, 76.8, 32, 1664, 11, 11, 1.04, 3.2, 56, {{1,1,5}}, },
	[ARM_BU_6] = {ARM_BU_6, 1, 6, 96, 40, 2080, 11, 11, 1.25, 4, 72, {{1,1,6}}, },
	[ARM_BU_7] = {ARM_BU_7, 1, 7, 117.6, 49, 2548, 11, 12, 1.46, 4.9, 90, {{1,1,7}}, },
	[ARM_BU_8] = {ARM_BU_8, 1, 8, 141.6, 59, 3068, 11, 12, 1.67, 5.9, 110, {{1,1,8}}, },
	[ARM_BU_9] = {ARM_BU_9, 1, 9, 168, 70, 3640, 11, 13, 1.88, 7, 132, {{1,1,9}}, },
	[ARM_BU_10] = {ARM_BU_10, 1, 10, 196.8, 82, 4264, 11, 13, 2.08, 8.2, 156, {{1,1,10}}, },
	[ARM_QI_1] = {ARM_QI_1, 2, 1, 31, 8, 480, 15, 6, 0.21, 1, 20, {{1,1,1}}, },
	[ARM_QI_2] = {ARM_QI_2, 2, 2, 43.4, 11.2, 672, 15, 6, 0.42, 1.4, 24, {{1,1,2}}, },
	[ARM_QI_3] = {ARM_QI_3, 2, 3, 58.9, 15.2, 912, 15, 7, 0.62, 1.9, 32, {{1,1,3}}, },
	[ARM_QI_4] = {ARM_QI_4, 2, 4, 77.5, 20, 1200, 15, 7, 0.83, 2.5, 42, {{1,1,4}}, },
	[ARM_QI_5] = {ARM_QI_5, 2, 5, 99.2, 25.6, 1536, 15, 8, 1.04, 3.2, 56, {{1,1,5}}, },
	[ARM_QI_6] = {ARM_QI_6, 2, 6, 124, 32, 1920, 15, 8, 1.25, 4, 72, {{1,1,6}}, },
	[ARM_QI_7] = {ARM_QI_7, 2, 7, 151.9, 39.2, 2352, 15, 9, 1.46, 4.9, 90, {{1,1,7}}, },
	[ARM_QI_8] = {ARM_QI_8, 2, 8, 182.9, 47.2, 2832, 15, 9, 1.67, 5.9, 110, {{1,1,8}}, },
	[ARM_QI_9] = {ARM_QI_9, 2, 9, 217, 56, 3360, 15, 10, 1.88, 7, 132, {{1,1,9}}, },
	[ARM_QI_10] = {ARM_QI_10, 2, 10, 254.2, 65.6, 3936.0, 15, 10, 2.08, 8.2, 156, {{1,1,10}}, },
	[ARM_GONG_1] = {ARM_GONG_1, 3, 1, 33, 9, 390, 10, 8, 0.21, 1, 20, {{1,1,1}}, },
	[ARM_GONG_2] = {ARM_GONG_2, 3, 2, 46.2, 12.6, 546, 10, 8, 0.42, 1.4, 24, {{1,1,2}}, },
	[ARM_GONG_3] = {ARM_GONG_3, 3, 3, 62.7, 17.1, 741, 10, 9, 0.62, 1.9, 32, {{1,1,3}}, },
	[ARM_GONG_4] = {ARM_GONG_4, 3, 4, 82.5, 22.5, 975, 10, 9, 0.83, 2.5, 42, {{1,1,4}}, },
	[ARM_GONG_5] = {ARM_GONG_5, 3, 5, 105.6, 28.8, 1248, 10, 10, 1.04, 3.2, 56, {{1,1,5}}, },
	[ARM_GONG_6] = {ARM_GONG_6, 3, 6, 132, 36, 1560, 10, 10, 1.25, 4, 72, {{1,1,6}}, },
	[ARM_GONG_7] = {ARM_GONG_7, 3, 7, 161.7, 44.1, 1911, 10, 11, 1.46, 4.9, 90, {{1,1,7}}, },
	[ARM_GONG_8] = {ARM_GONG_8, 3, 8, 194.7, 53.1, 2301, 10, 11, 1.67, 5.9, 110, {{1,1,8}}, },
	[ARM_GONG_9] = {ARM_GONG_9, 3, 9, 231, 63, 2730, 10, 12, 1.88, 7, 132, {{1,1,9}}, },
	[ARM_GONG_10] = {ARM_GONG_10, 3, 10, 270.6, 73.8, 3198.0, 10, 12, 2.08, 8.2, 156, {{1,1,10}}, },
	[ARM_CHE_1] = {ARM_CHE_1, 4, 1, 36, 12, 180, 7, 22, 0.21, 1, 20, {{1,1,1}}, },
	[ARM_CHE_2] = {ARM_CHE_2, 4, 2, 50.4, 16.8, 252.0, 7, 22, 0.42, 1.4, 24, {{1,1,2}}, },
	[ARM_CHE_3] = {ARM_CHE_3, 4, 3, 68.4, 22.8, 342, 7, 23, 0.62, 1.9, 32, {{1,1,3}}, },
	[ARM_CHE_4] = {ARM_CHE_4, 4, 4, 90, 30, 450, 7, 23, 0.83, 2.5, 42, {{1,1,4}}, },
	[ARM_CHE_5] = {ARM_CHE_5, 4, 5, 115.2, 38.4, 576, 7, 24, 1.04, 3.2, 56, {{1,1,5}}, },
	[ARM_CHE_6] = {ARM_CHE_6, 4, 6, 144, 48, 720, 7, 24, 1.25, 4, 72, {{1,1,6}}, },
	[ARM_CHE_7] = {ARM_CHE_7, 4, 7, 176.4, 58.8, 882, 7, 25, 1.46, 4.9, 90, {{1,1,7}}, },
	[ARM_CHE_8] = {ARM_CHE_8, 4, 8, 212.4, 70.8, 1062, 7, 26, 1.67, 5.9, 110, {{1,1,8}}, },
	[ARM_CHE_9] = {ARM_CHE_9, 4, 9, 252, 84, 1260, 7, 27, 1.88, 7, 132, {{1,1,9}}, },
	[ARM_CHE_10] = {ARM_CHE_10, 4, 10, 295.2, 98.4, 1476.0, 7, 28, 2.08, 8.2, 156, {{1,1,10}}, },
}



local prop_arm_mt = {}
prop_arm_mt.__index = function (_table, _key)
    local lang_idx = prop_armLANGKey[_key]
    if lang_idx then
		local lang_str = propLanguageById(_table[lang_idx])
		local idx_ex = prop_armKey[_key .. "ARG"]
		local lang_args = _table[idx_ex]
		if lang_args then
			if #lang_args > 0 then
				return string.format(lang_str,unpack(lang_args))
			end
		end
		return lang_str
    end
    local idx = prop_armKey[_key]
    if not idx then
        return nil
    end
    return _table[idx]
end

function prop_armById(_key_id)
    local id_data = prop_armData[_key_id]
    if id_data == nil then
        return nil
    end
    if getmetatable(id_data) == nil then
        setmetatable(id_data, prop_arm_mt)
    end
    return id_data
end

